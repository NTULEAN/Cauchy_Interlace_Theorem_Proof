/-
Copyright (c) 2021 Yury G. Kudryashov. All rights reserved.
Released under Apache 2.0 license as described in the file LICENSE.
Authors: Yury G. Kudryashov
-/
import data.real.irrational
import topology.metric_space.baire

/-!
# Topology of irrational numbers

In this file we prove the following theorems:

* `is_GŒ¥_irrational`, `dense_irrational`, `eventually_residual_irrational`: irrational numbers
  form a dense GŒ¥ set;

* `irrational.eventually_forall_le_dist_cast_div`,
  `irrational.eventually_forall_le_dist_cast_div_of_denom_le`;
  `irrational.eventually_forall_le_dist_cast_rat_of_denom_le`: a sufficiently small neighborhood of
  an irrational number is disjoint with the set of rational numbers with bounded denominator.

We also provide `order_topology`, `no_min_order`, `no_max_order`, and `densely_ordered`
instances for `{x // irrational x}`.

## Tags

irrational, residual
-/

open set filter metric
open_locale filter topological_space

lemma is_GŒ¥_irrational : is_GŒ¥ {x | irrational x} :=
(countable_range _).is_GŒ¥_compl

lemma dense_irrational : dense {x : ‚Ñù | irrational x} :=
begin
  refine real.is_topological_basis_Ioo_rat.dense_iff.2 _,
  simp only [mem_Union, mem_singleton_iff],
  rintro _ ‚ü®a, b, hlt, rfl‚ü© hne, rw inter_comm,
  exact exists_irrational_btwn (rat.cast_lt.2 hlt)
end

lemma eventually_residual_irrational : ‚àÄ·∂† x in residual ‚Ñù, irrational x :=
eventually_residual.2 ‚ü®_, is_GŒ¥_irrational, dense_irrational, Œª _, id‚ü©

namespace irrational

variable {x : ‚Ñù}

instance : order_topology {x // irrational x} :=
induced_order_topology _ (Œª x y, iff.rfl) $ Œª x y hlt,
  let ‚ü®a, ha, hxa, hay‚ü© := exists_irrational_btwn hlt in ‚ü®‚ü®a, ha‚ü©, hxa, hay‚ü©

instance : no_max_order {x // irrational x} :=
‚ü®Œª ‚ü®x, hx‚ü©, ‚ü®‚ü®x + (1 : ‚Ñï), hx.add_nat 1‚ü©, by simp‚ü©‚ü©

instance : no_min_order {x // irrational x} :=
‚ü®Œª ‚ü®x, hx‚ü©, ‚ü®‚ü®x - (1 : ‚Ñï), hx.sub_nat 1‚ü©, by simp‚ü©‚ü©

instance : densely_ordered {x // irrational x} :=
‚ü®Œª x y hlt, let ‚ü®z, hz, hxz, hzy‚ü© := exists_irrational_btwn hlt in ‚ü®‚ü®z, hz‚ü©, hxz, hzy‚ü©‚ü©

lemma eventually_forall_le_dist_cast_div (hx : irrational x) (n : ‚Ñï) :
  ‚àÄ·∂† Œµ : ‚Ñù in ùìù 0, ‚àÄ m : ‚Ñ§, Œµ ‚â§ dist x (m / n) :=
begin
  have A : is_closed (range (Œª m, n‚Åª¬π * m : ‚Ñ§ ‚Üí ‚Ñù)),
    from ((is_closed_map_smul‚ÇÄ (n‚Åª¬π : ‚Ñù)).comp
      int.closed_embedding_coe_real.is_closed_map).closed_range,
  have B : x ‚àâ range (Œª m, n‚Åª¬π * m : ‚Ñ§ ‚Üí ‚Ñù),
  { rintro ‚ü®m, rfl‚ü©, simpa using hx },
  rcases metric.mem_nhds_iff.1 (A.is_open_compl.mem_nhds B) with ‚ü®Œµ, Œµ0, hŒµ‚ü©,
  refine (ge_mem_nhds Œµ0).mono (Œª Œ¥ hŒ¥ m, not_lt.1 $ Œª hlt, _),
  rw dist_comm at hlt,
  refine hŒµ (ball_subset_ball hŒ¥ hlt) ‚ü®m, _‚ü©,
  simp [div_eq_inv_mul]
end

lemma eventually_forall_le_dist_cast_div_of_denom_le (hx : irrational x) (n : ‚Ñï) :
  ‚àÄ·∂† Œµ : ‚Ñù in ùìù 0, ‚àÄ (k ‚â§ n) (m : ‚Ñ§), Œµ ‚â§ dist x (m / k) :=
(finite_le_nat n).eventually_all.2 $ Œª k hk, hx.eventually_forall_le_dist_cast_div k

lemma eventually_forall_le_dist_cast_rat_of_denom_le (hx : irrational x) (n : ‚Ñï) :
  ‚àÄ·∂† Œµ : ‚Ñù in ùìù 0, ‚àÄ r : ‚Ñö, r.denom ‚â§ n ‚Üí Œµ ‚â§ dist x r :=
(hx.eventually_forall_le_dist_cast_div_of_denom_le n).mono $ Œª Œµ H r hr, H r.denom hr r.num

end irrational
